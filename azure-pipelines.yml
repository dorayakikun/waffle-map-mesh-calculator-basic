jobs:
  - job: basic
    pool:
      vmImage: ubuntu-16.04
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "^12.13.1"
        displayName: "Install Node.js"
      - script: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
        displayName: "Install Yarn"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          node -v
          yarn -v
        displayName: "Print versions"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn --frozen-lockfile
        displayName: "Install dependencies"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn lint --format junit > lint-junit.xml
        displayName: "Run linting"
      - task: PublishTestResults@2
        inputs:
          testRunTitle: "lint"
          testResultsFiles: "**/lint-junit.xml"
        condition: succeededOrFailed()
        displayName: "Publish lint results"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn typecheck
        displayName: "Run typecheck"
  - job: Linux
    dependsOn:
      - basic
    pool:
      vmImage: ubuntu-16.04
    strategy:
      maxParallel: 3
      matrix:
        node-12.x:
          node_version: ^12.13.1
        node-10.x:
          node_version: ^10.16.3
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: "Install Node.js $(node_version)"
      - script: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
        displayName: "Install Yarn"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          node -v
          yarn -v
        displayName: "Print versions"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn --frozen-lockfile
        displayName: "Install dependencies"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn test --ci --reporters=jest-junit
        displayName: "Run tests with coverage"
      - task: PublishTestResults@2
        inputs:
          testRunTitle: "Linux with Node.js $(node_version)"
          testResultsFiles: "**/junit.xml"
        condition: succeededOrFailed()
        displayName: "Publish test results"
  - job: macOS
    dependsOn:
      - basic
    pool:
      vmImage: "macOS-latest"
    strategy:
      maxParallel: 3
      matrix:
        node-12.x:
          node_version: ^12.13.1
        node-10.x:
          node_version: ^10.16.3
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: "Install Node.js $(node_version)"
      - script: |
          curl -o- -L https://yarnpkg.com/install.sh | bash
        displayName: "Install Yarn"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          node -v
          yarn -v
        displayName: "Print versions"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn --frozen-lockfile
        displayName: "Install dependencies"
      - script: |
          set -e
          export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
          yarn test --ci --reporters=jest-junit
        displayName: "Run tests with coverage"
      - task: PublishTestResults@2
        inputs:
          testRunTitle: "macOS with Node.js $(node_version)"
          testResultsFiles: "**/junit.xml"
        condition: succeededOrFailed()
        displayName: "Publish test results"
